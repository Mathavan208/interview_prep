# Stage 1: Build the application using Maven
FROM maven:3.8.6-openjdk-11-slim AS build

WORKDIR /app

# Copy pom.xml first to leverage Docker's layer caching
COPY pom.xml .
RUN mvn dependency:go-offline

# Copy the rest of the source code
COPY src ./src

# Build the application. This will create target/classes and target/dependency
RUN mvn clean package -DskipTests

# Stage 2: Create the final runtime image
FROM openjdk:11-jre-slim

WORKDIR /app

# Copy the compiled classes from the build stage
COPY --from=build /app/target/classes ./target/classes

# Copy the webapp resources from the build stage
COPY --from=build /app/src/main/webapp ./src/main/webapp

# Copy all dependency JARs from the build stage
COPY --from=build /app/target/dependency ./target/dependency

# Expose the port Render expects
EXPOSE 10000

# The command to run the application with the correct classpath
# The classpath MUST include your classes AND all the dependency JARs
CMD ["java", "-cp", "target/classes:target/dependency/*", "com.interviewprep.Main"]